@echo off
setlocal enabledelayedexpansion

echo üîß Setting up Git case sensitivity for CrychicDoc repository...
echo üì± Detected OS: Windows

echo.
echo ‚öôÔ∏è  Configuring Git case sensitivity...
git config core.ignorecase false

echo üîó Setting up Git hooks...
git config core.hooksPath .githooks

echo ‚ÑπÔ∏è  On Windows, hook executability is handled automatically by Git

echo.
echo üîç Verifying configuration...

for /f "tokens=*" %%i in ('git config --get core.ignorecase') do set IGNORECASE_VALUE=%%i
for /f "tokens=*" %%i in ('git config --get core.hooksPath') do set HOOKS_PATH=%%i

if "!IGNORECASE_VALUE!"=="false" (
    echo ‚úÖ Success! Git is now configured for case sensitivity.
    echo    core.ignorecase = false
) else (
    echo ‚ùå Error: Failed to configure case sensitivity.
    echo    Please manually run: git config core.ignorecase false
    exit /b 1
)

if "!HOOKS_PATH!"==".githooks" (
    echo ‚úÖ Success! Git hooks directory configured.
    echo    core.hooksPath = .githooks
) else (
    echo ‚ùå Error: Failed to configure hooks directory.
    echo    Please manually run: git config core.hooksPath .githooks
)

echo.
echo üîç Checking for potential case conflicts...
echo ‚ÑπÔ∏è  Case conflict check requires additional tools on Windows

echo.
echo üéâ Git case sensitivity setup complete!
echo.
echo üìù Important notes for Windows:
echo    ‚Ä¢ Windows filesystems are typically case-insensitive
echo    ‚Ä¢ Git case sensitivity helps maintain consistency across platforms
echo    ‚Ä¢ Use Git Bash or PowerShell for best compatibility
echo    ‚Ä¢ Consider using WSL for a more Unix-like development environment
echo.
echo    ‚Ä¢ This configuration only affects your local repository
echo    ‚Ä¢ The post-checkout hook will automatically run when you checkout branches
echo    ‚Ä¢ New contributors should run this setup script after cloning
echo    ‚Ä¢ The .githooks directory is now synced with the repository

pause 